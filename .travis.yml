language: python

matrix:

  fast_finish: true

  include:

    - os: linux
      dist: xenial
      python: "3.4"

    - os: linux
      dist: xenial
      python: "3.7"

    - os: osx
      language: generic
      env: PYTHON=3.4.4

  allow_failures:
    - os: osx

addons:
  apt:
    packages:
      - curl
      - build-essential
  homebrew:
    packages:
      - npm
      - mongodb

services:
  - mongodb

deploy:
  provider: heroku
  api_key:
    secure: "OjuK8pjGy8e5En7c/szffYhTnE0PrKnD+m8iSx+SG5WxQpFWytwKzCwbN46kMkN1C0ayuxZfMuTMD1Lhc1cUZnlxKBhxfZZY2EwApdP9pK6az1mxvkAtIOdQg093INhZ2dVHbA1/22XxXi/2577gzcVHFcNGFIT+fpwagyAsHx6Y0RWXm4PMCYZsgqql6FMFR+S4PeFgZhA2pqWVzznCMEJVD9XzNCwimOTVPB0qGRsVFPoO546/HC9NH5Rlh1mZD6Qk4EnfjJTEUjY+4S4fkZ/1afkn6JVsUQoTCCkkEbDvWYZ1ajLDLYyekM9VdwyON9a1fzByAHhNZzuo1k4lR6W8HikhvJlnNvZZCW3vQnpvajaxYm93YfbZo64/m6SFqwSuc8wvdDZxJH9eyO/sQpaenBeUcp/6i9K90uTa+lgJ80Aq0jvK14Fr07NOlcOTLRBe2/r9WptWp3k7Ie1Gr3a1oL2z/b4nPs0EiezZA3ZF4TqTlfaPWQuNW18c4Ol2mCDXk+6AKSe2zk9oCuvzv9sI0njXx9nBV4ujr3HZ2ODg5T1jC2p4kgTj27dOZy5mMTGSd3xdQguG7kXWO31gUpS9P+cnvONVVTVKMqIxg5hF6KBx5duUAlOPqFFNTWXNFEycdfXeZAXiC5RcaXKspPcEYA1QJhexrO797/SguWo="
  run:
    - pushd coding

    - echo "twitter-fire-scraper-dashboard is starting up."
    - echo "Starting up Web API..."
    - bash setup-scripts/start-tfs-webapi.sh

    - echo "Starting dashboard..."
    - bash setup-scripts/start-tfs-dashboard.sh

    - popd

before_install:

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start mongodb; fi

  # macOSX CI environment configuration: https://pythonhosted.org/CodeChat/.travis.yml.html
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update
      # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
      brew install openssl readline
      # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
      # I didn't do this above because it works and I'm lazy.
      brew outdated pyenv || brew upgrade pyenv
      # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
      # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
      brew install pyenv-virtualenv
      pyenv install $PYTHON
      # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
      # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
      # modify the Bash environment. ??? So, I hand-set the variables instead.
      export PYENV_VERSION=$PYTHON
      export PATH="/Users/travis/.pyenv/shims:${PATH}"
      pyenv-virtualenv venv
      source venv/bin/activate
      # A manual check that the correct version of Python is running.
      python --version

      pip -V

      pip install pipenv

    fi

  - echo "Decrypting twitter API keys..."
  - openssl aes-256-cbc -K $encrypted_103c68a2b959_key -iv $encrypted_103c68a2b959_iv -in secrets.json.enc -out ~/secrets.json -d

  - echo "Installing npm..."
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      bash coding/setup-scripts/install-npm.sh
    fi

script:

  - echo "I am script!"

  - pushd coding

  - echo "Testing twitter fire scraper"
  - bash setup-scripts/test-tfs.sh

  - echo "Testing twitter fire scraper web API"
  - bash setup-scripts/test-tfs-webapi.sh

  - echo "twitter-fire-scraper-dashboard is starting up."
  - echo "Starting up Web API..."
  - bash setup-scripts/start-tfs-webapi.sh

  - echo "Starting dashboard..."
  - bash setup-scripts/start-tfs-dashboard.sh

  - popd

after_failure:

  - echo "Log of twitter-fire-scraper-webapi:"
  - cat /tmp/flask.log

  - echo "Error log of twitter-fire-scraper-webapi:"
  - cat /tmp/flask.error.log


  - echo "Log of twitter-fire-scraper-dashboard:"
  - cat /tmp/node.log

  - echo "Error log of twitter-fire-scraper-dashboard:"
  - cat /tmp/node.error.log
